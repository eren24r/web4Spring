plugins {
    id 'java'
    id 'war'
}

group 'org.web4'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
    springVersion = '6.1.1'
    javaxAnnotationVersion = '1.3.2'
    thymeleafVersion= '3.1.1.RELEASE'
}

dependencies {
    compileOnly('jakarta.servlet:jakarta.servlet-api:6.0.0')
    implementation('jakarta.annotation:jakarta.annotation-api:2.1.1')

    implementation("org.thymeleaf.testing:thymeleaf-testing-spring6:${thymeleafVersion}")

    implementation("org.springframework:spring-core:${springVersion}")
    implementation("org.springframework:spring-beans:${springVersion}")
    implementation("org.springframework:spring-context:${springVersion}")

    implementation("org.springframework:spring-web:${springVersion}")
    implementation("org.springframework:spring-webmvc:${springVersion}")

    implementation("org.springframework.security:spring-security-core:${springVersion}")
    implementation("org.springframework.security:spring-security-web:${springVersion}")
    implementation("org.springframework.security:spring-security-config:${springVersion}")
    implementation("org.hibernate:hibernate-validator:8.0.1.Final")

    implementation("org.json:json:20231013")

    implementation('io.jsonwebtoken:jjwt-api:0.12.3')
    runtimeOnly('io.jsonwebtoken:jjwt-impl:0.12.3')
    runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.12.3') {
        exclude(group: 'org.json', module: 'json') //provided by Android natively
    }

    implementation("com.google.code.gson:gson:2.10.1")

    implementation("org.springframework.data:spring-data-rest-webmvc:4.2.1")

    implementation('org.springframework.data:spring-data-jpa:3.1.5')
    implementation('jakarta.persistence:jakarta.persistence-api:3.1.0')
    implementation('org.hibernate:hibernate-core:6.0.2.Final')
    implementation('org.postgresql:postgresql:42.6.0')

    implementation("javax.annotation:javax.annotation-api:${javaxAnnotationVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}